---
title: "Agendando cronjobs nativos no RDS Aurora PostgreSQL com pg_cron"
draft: false
date: 2025-07-01T00:00:00.000Z
description: "Em muitas aplica√ß√µes, √© comum a necessidade de executar tarefas recorrentes: limpar dados antigos, atualizar tabelas derivadas ou enviar notifica√ß√µes. Em servidores tradicionais, usamos o cron, um agendador de tarefas do sistema operacional, para executar esses processos de forma autom√°tica."
comments: true
keywords: [
  "Software",
  "Develop",
  "Setup DEV",
  "rifeli",
  "Software Developer",
  "Data Science",
  "CTO Harmo",
  "scalable architectures",
  "data engineering",
  "cloud solutions",
  "cronjob",
  "RDS Aurora Cluster",
  "RDS Aurora Cluster Postgres with Cronjob",
  "RDS Aurora Cluster Postgres com Cronjob"
]
tags:
  - cronjob
  - aws-rds
  - postgresql
---

# Introdu√ß√£o

As pessoas que gostam do meio tecnol√≥gico, acabam esbarrando neste assunto, um conceito que existe antes dos anos 1970 - como deixar agendado a execu√ß√£o de taferas com SQL em minha base de dados?

A ideia aqui, √© trazer informa√ß√µes sobre agendamento de tarefas no AWS RDS Aurora Cluster com PostgreSQL.

Em muitas aplica√ß√µes, √© comum a necessidade de executar tarefas recorrentes: limpar dados antigos, atualizar tabelas derivadas ou enviar notifica√ß√µes. Em servidores tradicionais, usamos o cron, um agendador de tarefas do sistema operacional, para executar esses processos de forma autom√°tica.

Desde 2021, conseguimos fazer isso de forma nativa, sem precisar criar nenhuma estrutura adicional, como Lambdas, EC2 e/ou EventBridge.

Neste artigo, mostro como ativar o **pg_cron**, criar tarefas agendadas e compartilhar dicas pr√°ticas para usar cronjobs diretamente no RDS Aurora PostgreSQL.

# O que √© cronjob

Um cronjob √© uma tarefa que roda automaticamente em hor√°rios definidos. √â muito usado para tarefas recorrentes como backup, limpeza de dados e/ou gera√ß√£o de relat√≥rios.

Em ambientes Linux, cron √© um agendador de processos do sistema. Mas em bancos PostgreSQL com pg_cron, conseguimos usar sintaxe semelhante ao crontab, com agendamento diretamente via comandos SQL, o que possibilita deixarmos queries agendadas, sem a necessidade do uso de m√°quinas+triggers.

# Como funciona

Desde a vers√£o 12.5 √© poss√≠vel fazer de forma nativa no RDS Aurora PostgreSQL (antes a gente contornava com evento e lambda). Ou seja, √© nativo e permite definir jobs que executam comandos SQL com agendamento cron (ex: todo dia √†s 2h). Um detalhe importante √© que no RDS Aurora, ele roda no mesmo n√≥ prim√°rio da inst√¢ncia, ent√£o n√£o exige infraestrutura adicional.

# Cen√°rios

O recurso de cron pode ser utilizado em diversos cen√°rios, principalmente com rotinas na base.

- Limpeza de dados antigos (data retention);
- Gera√ß√£o de relat√≥rios peri√≥dicos;
- Atualiza√ß√£o de dados derivativos ou caches (ex REFRESH MATERIALIZED VIEW);
- Detec√ß√£o de anomalias ou padr√µes incomuns (agendar an√°lise estat√≠stica e salvar alertas);
- Manuten√ß√£o preventiva (como REINDEX e VACUUM).

# Como habilitar

Pra usar o recurso cron em seu cluster RDS Aurora PostgreSQL, segue alguns pontos:

- A vers√£o dele precisa ser 12.5+ (se for menos, tu tem um problem√£o haha);
- Validar se o par√¢metro `shared_preload_libraries` cont√©m `pg_cron` (via parameter group do banco);
- Ativar a extens√£o, como user principal da base, rode `CREATE EXTENSION IF NOT EXISTS pg_cron;`;
- Criar suas crons e ser feliz \o/.

Pra criar as suas crons, √© muito simples:

```sql
SELECT cron.schedule(
  'cleanup_old_data', -- name
  '0 2 * * *', -- crontab config (aqui roda 2am)
  $$DELETE FROM logs WHERE created_at < NOW() - interval '30 days'$$ -- query
);
```

Pra gerenciar suas crons, basta validar o que tem: `SELECT * FROM cron.job;` e pra desativar `SELECT cron.unschedule(jobid);`

# üîê Alguns cuidados

Como sempre, nem tudo s√£o flores, segue alguns avisos para voc√™ ficar alerta:

- O pg_cron executa jobs com o mesmo privil√©gio do usu√°rio que os criou;
- Jobs falham silenciosamente se houver erro de permiss√£o;
- Ele s√≥ roda no n√≥ prim√°rio, n√£o em r√©plicas;
- Monitore uso de CPU/mem√≥ria caso agende jobs pesados.

# Conclus√£o

A extens√£o `pg_cron` transforma o `RDS Aurora PostgreSQL` em um banco ainda mais poderoso, permitindo automa√ß√£o direta, sem precisar de infraestrutura externa. √â ideal para tarefas peri√≥dicas como limpeza de dados, atualiza√ß√£o de caches e envio de notifica√ß√µes.

Diz a√≠, t√° usando cron nativo e otimizando recurso de infra?