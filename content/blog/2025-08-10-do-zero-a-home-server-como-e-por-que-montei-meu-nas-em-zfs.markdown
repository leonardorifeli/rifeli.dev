---
title: "De zero a Home Server: como e por que montei meu NAS em ZFS"
draft: false
date: 2025-08-10T00:00:00.000Z
description: "Comecei a programar aos quatorze anos, tendo um site de streaming de √°udio e um servidor de Tibia (vulgo OT Server), na √©poca rodando na vers√£o 8.5. Ter solu√ß√µes self-hosted, sempre foi algo que gostei muito e foi onde consegui estudar e aprender muito. Andei em diversas esf√©ras, de protocolos de comunica√ß√£o at√© solu√ß√µes personalizadas para auto gest√£o."
comments: true
keywords: [
  "Software",
  "Develop",
  "Setup DEV",
  "rifeli",
  "Software Developer",
  "Data Science",
  "CTO Harmo",
  "scalable architectures",
  "data engineering",
  "cloud solutions",
  "carreira desenvolvedor",
  "kubernets",
  "gerenciamento de cluster k8s",
  "home-server",
  "servidor local",
  "servidor em casa"
]
tags:
  - infra-estrutura
  - server
---

# Introdu√ß√£o

<p align="center">
  <img src="/static/images/posts/home-server/19.png" alt=""><br>
  <em>Sempre em busca da melhor vers√£o</em>
</p>

Comecei a programar aos quatorze anos, tendo um site de streaming de √°udio e um servidor de Tibia (vulgo OT Server), na √©poca rodando na vers√£o 8.5. Ter solu√ß√µes self-hosted, sempre foi algo que gostei muito e foi onde consegui estudar e aprender muito. Andei em diversas esf√©ras, de protocolos de comunica√ß√£o at√© solu√ß√µes personalizadas para auto gest√£o.

Isso se extendeu at√© em uma solu√ß√£o para gest√£o de finan√ßas pessoais, rodando em self-hosted, feito em PHP. [D√° um visu aqui](https://github.com/leonardorifeli/morfeu).

E depois de quase dez anos, decidi montar novamente meu pr√≥prio **home server** para centralizar arquivos, ter mais controle e seguran√ßa, expandir meus conhecimentos sobre infraestrutura e claro, visando substituir servi√ßos pagos por solu√ß√µes self-hosted.

**O resultado foi um ambiente poderoso:**

- **ZFS para o meu NAS (5TB)**;
- Containers Docker gerenciados via **Portainer**;
- Interface web para gest√£o dos arquivos do NAS;
- Acesso externo seguro para os servi√ßos e SSH, via Cloudflare.

# O que √© NAS e por que usar RAID/ZFS?

Antes de mergulhar na parte pr√°tica, vale entender alguns conceitos fundamentais, para voc√™ poder aproveitar o melhor deste artigo:

### üì¶ O que √© NAS?

**NAS (Network Attached Storage)** √© basicamente um servidor de arquivos conectado √† rede.

Ele funciona como uma central de armazenamento, onde voc√™ pode salvar, organizar e acessar dados de qualquer dispositivo (PC, notebook, celular, TV etc).

Diferente de um HD externo plugado no computador, o NAS fica sempre dispon√≠vel na rede, podendo ser acessado localmente ou at√© pela internet (no nosso caso, com ajuda do **Cloudflare Tunnel**).

√â muito usado em empresas para centralizar backups, mas tamb√©m faz todo sentido em casa para armazenar fotos, v√≠deos, documentos e at√© hospedar servi√ßos como **Nextcloud** ou **Plex/Jellyfin**.

### üîÑ O que √© RAID?

**RAID (Redundant Array of Independent Disks)** √© uma forma de combinar v√°rios discos em um √∫nico volume l√≥gico, com foco em:

- **Redund√¢ncia**: se um disco falhar, os dados continuam acess√≠veis;
- **Performance**: em alguns n√≠veis de RAID, os dados s√£o distribu√≠dos entre os discos, acelerando leitura e escrita.

**Exemplos:**

- **RAID 1**: espelhamento, dois discos iguais, um √© c√≥pia do outro;
- **RAID 5**: tr√™s ou mais discos, com paridade, permite perder um sem perder dados;
- **RAID 6**: semelhante ao **RAID 5**, mas suporta falha de at√© dois discos.

‚ö†Ô∏è **Importante**: RAID n√£o substitui backup. Ele apenas protege contra falha f√≠sica de disco. (eu sofri da pior forma \o/)

### üõ°Ô∏è E onde entra o ZFS?

O **ZFS (Zettabyte File System)** √© um sistema de arquivos avan√ßado que combina fun√ß√µes de RAID + volume manager + filesystem em uma √∫nica tecnologia.

**Ele oferece:**

- **Integridade de dados**: cada bloco armazenado tem checksum, detectando e corrigindo corrup√ß√µes;
- **Snapshots e clones**: criar "fotos" instant√¢neas do estado do sistema, √∫teis para backup e rollback;
- **Compress√£o transparente**: economiza espa√ßo automaticamente;
- **Escalabilidade absurda**: projetado para lidar com petabytes de dados (vou continuar em 5TB no m√°ximo).

No meu setup, uso **ZFS com RAID-Z** (semelhante ao RAID 5), que oferece um bom equil√≠brio entre espa√ßo, performance e toler√¢ncia a falhas.

# O que √© Cloudflare e por que usei no meu Home Server

Quando falamos em expor servi√ßos caseiros para a internet, surgem logo duas preocupa√ß√µes:

- Seguran√ßa (n√£o deixar a rede interna vulner√°vel);
- Praticidade (evitar configura√ß√µes complicadas de roteador, NAT ou IP fixo).

√â a√≠ que entra o Cloudflare.

### O que √© Cloudflare?

O **Cloudflare** √© uma empresa que oferece servi√ßos de rede e seguran√ßa para aplica√ß√µes na internet. Eles s√£o muito conhecidos pelo **CDN (Content Delivery Network)** e pelo prote√ß√£o contra ataques **DDoS**, mas tamb√©m oferecem recursos que facilitam a vida de quem roda servi√ßos self-hosted, como o **Cloudflare Tunnel** (sim, √© pago).

### O que √© Cloudflare Tunnel?

O **Cloudflare Tunnel** cria um t√∫nel seguro entre o servidor e a rede da Cloudflare.

**Isso significa que:**

- N√£o √© necess√°rio abrir portas no roteador;
- N√£o precisa ter IP fixo contratado;
- Os servi√ßos locais ficam acess√≠veis pela internet atrav√©s de um dom√≠nio com HTTPS v√°lido.

**Exemplo pr√°tico:**

- https://files.seudominio.com ‚Üí aponta para o algum container rodando local em alguma porta (ex 8080).
- https://portainer.seudominio.com ‚Üí aponta para o algum container rodando local em alguma porta (ex 9443).

Tudo isso acontece com certificados **SSL autom√°ticos**, sem precisar configurar NGINX (√© uma mega divers√£o, recomendo).

### üéØ Por que escolhi o Cloudflare?

- **Facilidade**: em poucos comandos meu home server j√° estava acess√≠vel pela internet;
- **Seguran√ßa**: todo o tr√°fego passa pelo t√∫nel criptografado e protegido;
- **Custo baixo**: o plano gratuito do Cloudflare j√° cobre bem, mas o Tunnel √© pago ($10/m√™s);
- **Escalabilidade**: se eu quiser expor mais servi√ßos (ex.: Nextcloud, Jellyfin), basta adicionar no config.yml.

# Setup

Bom, depois de falarmos muito sobre quest√µes te√≥ricas, bora que vou te mostrar todo setup do meu **Home Server**.

<p align="center">
  <img src="/static/images/posts/home-server/18.png" alt=""><br>
  <em>Server with AMD-A8-5600k, with 16GB of ram, and NAS with 5TB</em>
</p>

### Servidor

Para montar esse home server, utilizei uma m√°quina com AMD-A8-5600k, com 16GB de RAM, e NAS com 5TB, rodando Ubuntu Server 24.10.

- **Servidor:** AMD-A8-5600k, with 16GB of ram, and NAS with 5TB;
- **NAS:** com ZFS consegui ter um pool com v√°rios HDs;

O diferencial √© que os HDs n√£o est√£o ligados diretamente √† placa-m√£e, mas em um hardware de gaveta (hot-swap bay).

**Isso me d√° algumas vantagens:**

- üîÑ **Troca r√°pida de discos**: se um HD apresentar falha, consigo remov√™-lo e colocar outro sem precisar abrir o servidor inteiro;
- üì¶ **Expans√£o simples**: basta adicionar um novo HD na gaveta para expandir o pool (no caso, consigo trocar HD se precisar);
- üõ°Ô∏è **Perfeito para ZFS/RAID**: quando um disco √© removido, o ZFS identifica e permite resilver (reconstruir os dados) no novo disco automaticamente.

Na pr√°tica, essa escolha trouxe a flexibilidade de um **NAS comercial** com a liberdade de um **home server** montado por conta pr√≥pria.

<p align="center">
  <img src="/static/images/posts/home-server/17.png" alt=""><br>
  <em>NAS com as gavetas</em>
</p>

### Gest√£o de energia:

Aqui √© um ponto que muitas pessoas acabam tendo d√∫vidas, e claro, √© interessante ter um recurso de backup para energia

- Gerador: 3.75 kVA 3000W 4-Stroke Electric Start;
- Nobreak SMS lite 1200VA (autonomia de ~6h);
- Nobreak SMS NET 4+ 1400VA (autonomia de ~8h).

### Custo de eletricidade

| Pot√™ncia m√©dia | kWh/m√™s | Custo/m√™s (R\$ 1,00/kWh) |
| -------------- | ------: | -----------------------: |
| 80 W           |    57,6 |            **R\$ 57,60** |
| 100 W          |    72,0 |            **R\$ 72,00** |
| 150 W          |   108,0 |           **R\$ 108,00** |
| 200 W          |   144,0 |           **R\$ 144,00** |

No meu caso. o consumo t√≠pico √©:

- **Idle/leve:** ~80‚Äì120 W
- **Carga moderada:** ~150‚Äì200 W

Se meu setup ficar a maior parte do tempo em idle com ZFS e 2‚Äì4 HDDs girando, √© algo entre **~R$60 e R$ 110/m√™s** (80‚Äì150 W m√©dios), variando um pouco devido a tarifa e quantos servi√ßos/containers ficam ativos.

# Arquitetura

Para entender como tudo se conecta, montei um diagrama simples da minha arquitetura:

<p align="center">
  <img src="/static/images/posts/home-server/flow.jpeg" alt=""><br>
  <em>Arquitetura completa</em>
</p>

### Como funciona o fluxo

- **Usu√°rio (eu)** ‚Üí acesso os servi√ßos a partir de qualquer computador ou celular usando um navegador;
- **Internet** ‚Üí a conex√£o √© roteada normalmente pela rede p√∫blica;
- **Cloudflare Tunnel** ‚Üí aqui entra a m√°gica: o tr√°fego passa pelo t√∫nel seguro da Cloudflare, que cria uma ponte entre meu dom√≠nio na internet e o servidor dentro de casa, sem precisar abrir portas no roteador ou usar IP fixo;
- **Servidor (em casa)** ‚Üí m√°quina principal rodando Ubuntu Server 24.10, containers Docker e o ZFS como camada de armazenamento;
- **NAS (ZFS Pool)** ‚Üí todos os dados ficam armazenados em m√∫ltiplos HDs organizados pelo ZFS, com redund√¢ncia, snapshots e integridade de dados.

### Benef√≠cios dessa arquitetura

- **Seguran√ßa:** n√£o exponho meu IP residencial diretamente. O tr√°fego chega pela Cloudflare j√° criptografado;
- **Flexibilidade:** qualquer servi√ßo que eu rodar em containers (File Browser, Portainer, Nextcloud, Jellyfin) pode ser publicado facilmente com um subdom√≠nio;
- **Resili√™ncia:** o ZFS garante que meus dados fiquem protegidos contra falhas de disco;
- **Simplicidade:** para acessar meus arquivos ou gerenciar containers, s√≥ preciso abrir o navegador e digitar o dom√≠nio configurado.

# Dicas

Durante a configura√ß√£o, percebi alguns pontos que fazem bastante diferen√ßa no dia a dia. Aqui est√£o minhas principais dicas:

### üîê Seguran√ßa em primeiro lugar

- **Ativar o fail2ban:** ele monitora os logs do SSH (e de outros servi√ßos) e bloqueia automaticamente IPs que tentam for√ßar senha.

```bash
sudo apt install fail2ban -y
sudo systemctl enable fail2ban
sudo systemctl start fail2ban
```

**Arquivo b√°sico de configura√ß√£o:**

```bash
[sshd]
enabled = true
port    = ssh
filter  = sshd
logpath = /var/log/auth.log
maxretry = 5
```

Assim, ataques de for√ßa bruta s√£o mitigados de forma simples. E sim, eles acontecem e muito.

- **Use autentica√ß√£o por chave SSH:** desative login por senha no SSH (PasswordAuthentication no).
- **Cloudflare Access (opcional):** al√©m do t√∫nel, voc√™ pode adicionar autentica√ß√£o em duas etapas diretamente na Cloudflare para acessar os subdom√≠nios.

### ‚ö° Efici√™ncia energ√©tica

- Configure spindown para os HDs menos usados (economiza energia e ru√≠do);
- Ajuste o governor da CPU para powersave quando n√£o precisar de alto desempenho cont√≠nuo.

### üõ°Ô∏è Resili√™ncia e backups

- Configure **scrubs** peri√≥dicos no ZFS para verificar a integridade dos dados;
- Use snapshots autom√°ticos no ZFS para recuperar vers√µes anteriores de arquivos.

**Lembre-se:** RAID/ZFS n√£o substitui backup. Tenha uma c√≥pia em outro lugar (outro HD, nuvem, etc).

### üß© Automa√ß√£o

- Configure o cloudflared tunnel para iniciar no boot;
- Centralize logs dos containers no Portainer para facilitar troubleshooting (√© importante).

# Conclus√£o

Montar novamente meu home server foi mais do que um exerc√≠cio t√©cnico. foi uma forma de ter controle total sobre meus dados e ao mesmo tempo aprimorar o conhecimento de tecnologias de n√≠vel enterprise, como **ZFS**, **Advanced Docker** e **Cloudflare Tunnel**, dentro de casa.

Hoje consigo centralizar arquivos, rodar containers em produ√ß√£o pessoal e acessar tudo de forma segura e simples pela internet, sem depender de servi√ßos pagos ou limita√ß√µes de solu√ß√µes prontas.

Claro que existem desafios (manuten√ß√£o, consumo de energia, configura√ß√µes manuais), mas a flexibilidade e o aprendizado compensam. Al√©m disso, posso expandir facilmente: seja adicionando mais HDs ao ZFS, novos containers via Portainer ou at√© servi√ßos completos como Nextcloud e Jellyfin.

No fim, esse projeto me mostrou que um NAS caseiro pode ser t√£o poderoso quanto solu√ß√µes comerciais, e ainda me d√° a liberdade de adaptar conforme minhas necessidades. üöÄ

üëâ E voc√™? Montaria o seu pr√≥prio servidor ou prefere uma solu√ß√£o pronta? Comenta a√≠!

> üèä‚Äç‚ôÇÔ∏èüö¥‚Äç‚ôÇÔ∏èüèÉ‚Äç‚ôÇÔ∏è ‚ÄúGood dream is a dream lived‚Äù ‚Äî Avelino, Thiago

# Changelog

Pretendo deixar esse artigo atualizado, abaixo um changelog com as modifica√ß√µes.

2025-08-10 - Adicionado a v0 do setup